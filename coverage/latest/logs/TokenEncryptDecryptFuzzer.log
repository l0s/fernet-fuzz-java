OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
INFO: Synchronizing coverage IDs in /tmp/jazzer-aukgclstbblfnjptodioofuqllgdifrq
INFO: Loaded 108 hooks from com.code_intelligence.jazzer.runtime.TraceCmpHooks
INFO: Loaded 4 hooks from com.code_intelligence.jazzer.runtime.TraceDivHooks
INFO: Loaded 2 hooks from com.code_intelligence.jazzer.runtime.TraceIndirHooks
INFO: Loaded 4 hooks from com.code_intelligence.jazzer.runtime.NativeLibHooks
INFO: Loaded 8 hooks from com.code_intelligence.jazzer.sanitizers.Deserialization
INFO: Loaded 3 hooks from com.code_intelligence.jazzer.sanitizers.ExpressionLanguageInjection
INFO: Loaded 70 hooks from com.code_intelligence.jazzer.sanitizers.LdapInjection
INFO: Loaded 46 hooks from com.code_intelligence.jazzer.sanitizers.NamingContextLookup
INFO: Loaded 1 hooks from com.code_intelligence.jazzer.sanitizers.OsCommandInjection
INFO: Loaded 48 hooks from com.code_intelligence.jazzer.sanitizers.ReflectiveCall
INFO: Loaded 8 hooks from com.code_intelligence.jazzer.sanitizers.RegexInjection
INFO: Loaded 16 hooks from com.code_intelligence.jazzer.sanitizers.RegexRoadblocks
INFO: Loaded 19 hooks from com.code_intelligence.jazzer.sanitizers.SqlInjection
INFO: Instrumented java.util.regex.Pattern$BnM with custom hooks only (took 33 ms, size +20%)
INFO: Instrumented java.util.regex.Pattern$BackRef with custom hooks only (took 3 ms, size +34%)
INFO: Instrumented java.util.regex.Pattern$Branch with custom hooks only (took 4 ms, size +26%)
INFO: Instrumented java.util.regex.Pattern$BranchConn with custom hooks only (took 1 ms, size +56%)
INFO: Instrumented java.util.regex.Pattern$BmpCharPropertyGreedy with custom hooks only (took 1 ms, size +31%)
INFO: Instrumented java.util.regex.Pattern$GroupCurly with custom hooks only (took 13 ms, size +34%)
INFO: Instrumented java.util.regex.Pattern$Ques with custom hooks only (took 12 ms, size +78%)
INFO: Instrumented java.util.regex.Pattern$Curly with custom hooks only (took 4 ms, size +50%)
INFO: Instrumented java.util.regex.Matcher with custom hooks only (took 77 ms, size +4%)
INFO: Instrumented java.util.regex.Pattern$Start with custom hooks only (took 1 ms, size +35%)
INFO: Instrumented java.util.regex.Pattern$First with custom hooks only (took 1 ms, size +52%)
INFO: Instrumented java.util.regex.Pattern$Slice with custom hooks only (took 1 ms, size +44%)
INFO: Instrumented java.util.regex.Pattern$CharPropertyGreedy with custom hooks only (took 12 ms, size +22%)
INFO: Instrumented java.util.regex.Pattern$BmpCharProperty with custom hooks only (took 1 ms, size +35%)
INFO: Instrumented java.util.regex.Pattern$LineEnding with custom hooks only (took 7 ms, size +49%)
INFO: Instrumented java.util.regex.Pattern$CharProperty with custom hooks only (took 2 ms, size +33%)
INFO: Instrumented java.util.regex.Pattern$GroupHead with custom hooks only (took 1 ms, size +49%)
INFO: Instrumented java.util.regex.Pattern with custom hooks only (took 242 ms, size +2%)
INFO: Instrumented TokenEncryptDecryptFuzzer (took 42 ms, size +26%)
INFO: Instrumented com.macasaet.fernet.Key (took 35 ms, size +10%)
INFO: Instrumented com.macasaet.fernet.TokenValidationException (took 9 ms, size +12%)
INFO: Instrumented com.macasaet.fernet.Constants (took 11 ms, size +7%)
INFO: Instrumented com.macasaet.fernet.Validator (took 5 ms, size +8%)
INFO: Instrumented com.macasaet.fernet.PayloadValidationException (took 15 ms, size +12%)
INFO: libFuzzer ignores flags that start with '--'
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 528475758
INFO: Loaded 1 modules   (512 inline 8-bit counters): 512 [0x7ff4090fd010, 0x7ff4090fd210), 
INFO: Loaded 1 PC tables (512 PCs): 512 [0xb69150,0xb6b150), 
